#!/usr/bin/env bash

# ---------------------------------------------------------------------------------------------------
# ⏹1. 字符串👉头部👈的模式匹配
# 
# ${variable#pattern}
#     如果 pattern 匹配变量 variable 的开头，
#     删除最短匹配（非贪婪匹配）的部分，返回剩余部分
# ${variable##pattern}
#     如果 pattern 匹配变量 variable 的开头，
#     删除最长匹配（贪婪匹配）的部分，返回剩余部分
#
# 两种语法会删除变量字符串开头的匹配部分（将其替换为空），返回剩下的部分。
# 区别是
#      一个是最短匹配（又称非贪婪匹配）
#      另一个是最长匹配（又称贪婪匹配）
# 
# 匹配模式pattern可以使用*、?、[]等通配符。
# ---------------------------------------------------------------------------------------------------
myPath1=/home/info/book/long_file.txt

# ---------------------------------------------------
# 🔴匹配模式是 /*/，* 可以匹配任意数量的字符
# 非贪婪匹配，能匹配到 /home/
# 将其作为对象外之后，会得到 info/book/long_file.txt
# ---------------------------------------------------
echo ${myPath1#/*/}  # info/book/long_file.txt

# ---------------------------------------------------
# 🔴匹配模式是 /*/，* 可以匹配任意数量的字符
# 贪婪匹配，能匹配到 /home/info/book/
# 将其作为对象外之后，会得到 long_file.txt
# ---------------------------------------------------
# 获取路径中的文件名
echo ${myPath1##/*/}  # long_file.txt

phone1="555-456-1414"
# 去除非贪婪匹配部分之外
echo ${phone1#*-}  # 456-1414
# 去除贪婪匹配的部分之外
echo ${phone1##*-}  # 1414

# ---------------------------------------------------
# 🔴将头部匹配的部分，替换成其他内容
# ${variable/#pattern/string}
# ---------------------------------------------------
var1=JPG.JPG

# 将开头的 JPG 删除之后，在开头添加 jpg 拼接
echo "jpg${var1#JPG}"  # jpg.JPG
# 将开头的 JPG 替换为 jpg
echo ${var1/#JPG/jpg}  # jpg.JPG

echo -e "\e[1;31m/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_分割线_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_\e[0m"

# ---------------------------------------------------------------------------------------------------
# ⏹2. 字符串👉尾部👈的模式匹配
# 
# ${variable%pattern}
#     如果 pattern 匹配变量 variable 的结尾，
#     删除最短匹配（非贪婪匹配）的部分，返回剩余部分
# ${variable%%pattern}
#     如果 pattern 匹配变量 variable 的结尾，
#     删除最长匹配（贪婪匹配）的部分，返回剩余部分
#
# 两种语法会删除变量字符串结尾的匹配部分（将其替换为空），返回剩下的部分。
# 区别是
#      一个是最短匹配（又称非贪婪匹配）
#      另一个是最长匹配（又称贪婪匹配）
# ---------------------------------------------------------------------------------------------------
myPath2=/home/info/book/long.file.txt

# ---------------------------------------------------
# 🔴匹配模式是 .*，* 可以匹配任意数量的字符
# 非贪婪匹配，能匹配到 .txt
# 将其作为对象外之后，会得到 /home/info/book/long.file
# ---------------------------------------------------
echo ${myPath2%.*}  # /home/info/book/long.file

# ---------------------------------------------------
# 🔴匹配模式是 .*，* 可以匹配任意数量的字符
# 贪婪匹配，能匹配到 .file.txt
# 将其作为对象外之后，会得到 /home/info/book/long
# ---------------------------------------------------
echo ${myPath2%%.*}  # /home/info/book/long

# 删除路径中的文件名，只留下路径
echo ${myPath2%/*}  # /home/info/book

phone2="555-456-1414"
# 去除非贪婪匹配部分之外
echo ${phone2%-*}  # 555-456
# 去除贪婪匹配的部分之外
echo ${phone2%%-*}  # 555

# ---------------------------------------------------
# 🔴将尾部匹配的部分，替换成其他内容
# ${variable/%pattern/string}
# ---------------------------------------------------
var2=foo.png

# 将结尾的 .png 删除之后，在结尾添加 .jpg 拼接
echo ${var2%.png}.jpg  # foo.jpg
# 将结尾的 png 替换为 jpg
echo ${var2/%png/jpg}  # foo.jpg

echo -e "\e[1;31m/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_分割线_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_\e[0m"

# ---------------------------------------------------------------------------------------------------
# ⏹3. 字符串👉任意位置👈的模式匹配
# 
# ${variable/pattern/string}
#     如果 pattern 匹配变量 variable 的一部分，
#     最长匹配（贪婪匹配）的那部分被 string 替换，但仅替换第一个匹配
# ${variable//pattern/string}
#     如果 pattern 匹配变量 variable 的一部分，
#     最长匹配（贪婪匹配）的那部分被 string 替换，所有匹配都替换
#
# 两种语法都是最长匹配（贪婪匹配）下的替换，
# 区别是
#      一个语法仅仅替换第一个匹配
#      另一个语法替换所有匹配
# ---------------------------------------------------------------------------------------------------
myPath3=/home/cam/foo/foo.name

# 🔴将第一个匹配到的 foo 替换为 bar
echo ${myPath3/foo/bar}  # /home/cam/bar/foo.name
# 🔴将匹配到的所有 foo 替换为 bar
echo ${myPath3//foo/bar}  # /home/cam/bar/bar.name

# 🔴将分隔符从 : 换成 换行符
echo -e "${PATH//:/'\n'}" | head
# /mingw64/bin
# /usr/local/bin
# /usr/bin
# /bin
# /e/soft/ffmpeg/bin

# 🔴模式部分可以使用通配符
phone3="555-456-1414"

# 将 5-4 替换为 -
echo ${phone3/5?4/-}  # 55-56-1414

# ---------------------------------------------------
# 🔴如果省略了string部分，
# 那么就相当于匹配的部分替换成空字符串，即删除匹配的部分。
# ---------------------------------------------------
# 删除 .* 匹配的部分
echo ${myPath3/.*/}  # /home/cam/foo/foo