#!/usr/bin/env bash

# ----------------------------------------------------------------------------------------------------
# ⏹临时文件的安全问题
# 直接创建临时文件，尤其在/tmp目录里面，往往会导致安全问题。
# 1. /tmp目录是所有人可读写的，任何用户都可以往该目录里面写文件。
#    创建的临时文件也是所有人可读的。
# 2. 如果攻击者知道临时文件的文件名，他可以创建符号链接，链接到临时文件，可能导致系统运行异常。
#    攻击者也可能向脚本提供一些恶意数据。因此，临时文件最好使用不可预测、每次都不一样的文件名，防止被利用。
# 3. 临时文件使用完毕，应该删除。但是，脚本意外退出时，往往会忽略清理临时文件。
#
# ⏹生成临时文件应该遵循下面的规则
# 1. 创建前检查文件是否已经存在。
# 2. 确保临时文件已成功创建。
# 3. 临时文件必须有权限的限制。
# 4. 临时文件要使用不可预测的文件名。
# 5. 脚本退出时，要删除临时文件（使用trap命令）。
# ----------------------------------------------------------------------------------------------------

# ----------------------------------------------------------------------------------------------------
# ⏹mktemp命令
# 1. 为安全创建临时文件而设计
# 2. 在创建临时文件之前，它不会检查临时文件是否存在，
#    但是它支持唯一文件名和清除机制，因此可以减轻安全攻击的风险。
# 
# ⏹用法
# 1. 直接运行 mktemp 命令，就能生成一个临时文件。
# 2. mktemp命令生成的临时文件名是随机的，而且权限是只有用户本人可读写。
# 3. -d 参数可以创建一个临时目录
# 4. -p 参数可以指定临时文件所在的目录，默认是使用 $TMPDIR 环境变量指定的目录
#    如果 $TMPDIR 环境变量没有设置，那么使用 /tmp 目录。
# 5. -t 参数可以指定临时文件的文件名模板，模板的末尾必须至少包含3个连续的X字符，表示随机字符
#    建议至少使用6个X。
# 6. 默认的文件名模板是 tmp.后接十个随机字符。
# ----------------------------------------------------------------------------------------------------

# 创建一个临时文件
TMPFILE1=$(mktemp) || exit 1
echo "创建的临时文件的路径: $TMPFILE1"

# ---------------------------------------------
# 🔴当脚本退出时，删除创建的临时文件
# 使用 trap 命令来监视脚本的退出信号 EXIT
# ---------------------------------------------
trap 'rm -f "$TMPFILE2"' EXIT

TMPFILE2=$(mktemp) || exit 1
echo "创建的临时文件的路径 $TMPFILE2"

# 🔴使用 -d 参数创建临时文件夹
TMP_FOLDER_PATH1=$(mktemp -d) || exit 1
[[ -d "$TMP_FOLDER_PATH1" ]] && echo "$TMP_FOLDER_PATH1 这个文件夹是存在的。"

# 🔴使用 -t 来指定创建的临时文件的名称模板
#   X字符，表示随机字符，建议至少使用六个X。
TMPFILE3=$(mktemp -t mytemp.XXXXXXXXXXXXXXXXXXXXXX) || exit 1
echo "创建的临时文件的路径 $TMPFILE3"
