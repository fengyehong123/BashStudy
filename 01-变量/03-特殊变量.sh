#!/usr/bin/env bash

# --------------- 特殊变量 ---------------
# Bash 提供一些特殊变量。
# 这些变量的值由 Shell 提供，用户不能进行赋值。
# ---------------------------------------- 

# ------------------------------------------------------------
# ⏹$? 
# 为上一个命令的退出码，用来判断上一个命令是否执行成功。
# 返回值是0，表示上一个命令执行成功；
# 如果不是零，表示上一个命令执行失败。
# ------------------------------------------------------------
ls -l
echo $?  # 0

# 由于并不存在该文件，所以返回值并不是 2
ls -l 'test.sh'
echo $?  # 2
echo -e "\e[1;31m/_/_/_/_/_/_/_/_/_/_/_/_/_/_分割线_/_/_/_/_/_/_/_/_/_/_/_/_/_/\e[0m"

# ------------------------------------------------------------
# ⏹$$
# 当前 Shell 的进程 ID
# ------------------------------------------------------------
echo $$  # 744
# 这个特殊变量可以用来命名临时文件
LOGFILE="/tmp/output_log.$$"
echo "临时文件所在的路径为: ${LOGFILE}"  # 临时文件所在的路径为: /tmp/output_log.744

# ------------------------------------------------------------
# ⏹$_
# 上一个命令的最后一个参数
# ------------------------------------------------------------
find . -name "*.sh"
echo "$_"  # *.sh
echo -e "\e[1;31m/_/_/_/_/_/_/_/_/_/_/_/_/_/_分割线_/_/_/_/_/_/_/_/_/_/_/_/_/_/\e[0m"

# ------------------------------------------------------------
# ⏹$#
# 脚本的参数数量
# ⏹$@
# 脚本的参数值
# ------------------------------------------------------------

# 当我们的脚本通过下面的方式启动时
# /usr/bin/env bash "e:\My_Project\BashStudy\01-变量\04-特殊变量.sh" param1 param2 param3
echo "$#"  # 3
echo "$@"  # param1 param2 param3
echo -e "\e[1;31m/_/_/_/_/_/_/_/_/_/_/_/_/_/_分割线_/_/_/_/_/_/_/_/_/_/_/_/_/_/\e[0m"

# 定义一个函数，在调用的时候，传入多个参数
my_func() {

    # 将所有参数转换为数组
    args=("$@")

    # 通过 $#变量 来获取参数的数量
    echo "参数数量: $#"
    # 数组方式获取参数的数量
    echo "参数数量: ${#args[@]}"

    # 输出数组的内容
    for i in "${!args[@]}"; do
        echo "参数[$i]: ${args[$i]}"
    done
}

# 调用自定义函数，并传入参数
my_func "参数1的值" "参数2的值" "参数3的值" "参数4的值"
# 参数数量: 4
# 参数数量: 4
# 参数[0]: 参数1的值
# 参数[1]: 参数2的值
# 参数[2]: 参数3的值
# 参数[3]: 参数4的值