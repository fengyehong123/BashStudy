#!/usr/bin/env bash

# _____________________________________________________________________
# 🔴jobs 命令
#   1. Bash 的内建命令，用来管理当前 shell 的后台作业
#   2. 只能看到当前 session
#     2.1 如果你在一个终端里启动了后台任务，另一个终端是看不到的。
#     2.2 jobs 不会显示系统中其他用户或其他 session 的进程。
#
# 💥注意事项💥
#   1. & 命令将任务放到后台的话, 可以通过 jobs 命令查看到
#
#   2. 如果通过 nohup + & 的方式后台运行任务的话
#      nohup 会让命令 忽略 SIGHUP 信号（shell 关闭时不会被杀死）。
#      加上 &，命令会在后台运行，但它 被脱离了当前 shell 的作业控制。
#
#   3. 结果：jobs 看不到【nohup + & 方式】运行的后台任务
#      因为 jobs 只显示当前 shell 的作业表，而这个作业已经不在作业表里了。
# ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾

# _____________________________________________________________________
# 🔹 基本语法
#   jobs [选项] [作业号...]
#       无参数 → 列出当前所有后台作业。
#       -l → 显示详细信息（包含 PID）。
#       -n → 只显示上次通知后状态有变化的作业。
#       -p → 只显示作业的 PID。
#       -r → 只显示正在运行的作业。
#       -s → 只显示已停止的作业。
# ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾

# 启动一个后台任务
( 
    sleep 60; 
    echo '任务1结束'
) &

# 再来一个后台任务
( 
    sleep 120; 
    echo '任务2结束'
) &   

# 查看正在后台运行的job的详细信息
jobs -l