#!/usr/bin/env bash

# ----------------------------------------------------------------------------------------------------
# 1. 默认情况下，脚本执行后，只输出运行结果，没有其他内容。
# 2. 如果多个命令连续执行，它们的运行结果就会连续输出。有时会分不清，某一段内容是什么命令产生的。
# 
# ⏹set -x
# 用来在运行结果之前，先输出执行的那一行命令。
# 
# 🔴还可以写作: 
#      set -o xtrace
#
# 脚本当中如果要关闭命令输出，使用
#      set +x
# ----------------------------------------------------------------------------------------------------

# 开启命令输出选项
set -x

echo "Hello World! $(date '+%Y-%m-%d')"
# ⇓⇓⇓⇓⇓⇓⇓可以看到，bash中执行的命令本身和结果都被输出到控制台上⇓⇓⇓⇓⇓⇓⇓
# ++ date +%Y-%m-%d
# + echo 'Hello World! 2024-11-09'
# Hello World! 2024-11-09

number=1

set -x
if [ $number = "1" ]; then
    echo "等于1"
else
    echo "不等于1"
fi
# 关闭命令输出
set +x

# 关闭命令输出之后，下面的echo语句只会输出结果，而不会把执行的命令打印到控制台上
echo "你好 世界! $(date '+%Y-%m-%d')"

echo -e "\e[1;31m/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_分割线_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_\e[0m"

# 通过bash命令调用其他脚本的时候，也可以手动添加 -x 选项，让脚本将内容打印在控制台上
cd 11-set命令 || exit 1
bash -x 01-u选项.sh