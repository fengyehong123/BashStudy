#!/usr/bin/env bash

# ---------------------------------------------------------------------------------------------------
# ⏹提取数组序号
# ${!array[@]}
# ${!array[*]}
#             可以返回数组的成员序号，即哪些位置是有值的。
# ---------------------------------------------------------------------------------------------------

# 初始化一个数组,在下标 0 1 2 的位置上都有值
arr1=('苹果' '香蕉' '橘子')
# 在下标 5 9 23 上添加元素
arr1+=([5]='西瓜' [9]='芒果' [23]='梨')

# ⏹返回数组元素所在的下标
echo "${!arr1[@]}"  # 0 1 2 5 9 23

# ⏹也可以利用此特性遍历数组
for index in "${!arr1[@]}"; do
    # ⏹根据下标获取数组中的值
    echo "${arr1[index]}"
done

echo -e "\e[1;31m/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_分割线_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_\e[0m"

# ---------------------------------------------------------------------------------------------------
# ⏹提取数组成员
# ${array[@]:position:length}的语法可以提取数组成员。
# ---------------------------------------------------------------------------------------------------
num_arr=( {1..5}_num )

# 获取所有的数组成员
echo "${num_arr[@]}"  # # 提取出下标为1的数组成员

# 提取出下标为1的数组成员
echo "${num_arr[@]:1:1}"  # 2_num

# 从下标为1的数组成员开始向后提取3个
echo "${num_arr[@]:1:3}"  # 2_num 3_num 4_num

# 如果省略长度参数length，则返回从指定位置开始到结尾的所有成员。
echo "${num_arr[@]:3}"  # 4_num 5_num