#!/usr/bin/env bash

cd "99-技巧\01-文件\01-读取文件到数组" || exit 1

# ------------------------------------------------------------------------
# 在 Bash 中,readarray 命令用于将文件的内容逐行读入数组中。
# 相比 while 循环和 read 命令的组合，
# readarray 提供了一种更简洁的方式将 文件内容直接加载到数组中。
#
# ⏹选项
# -t 
#   删除每行末尾的换行符。这是常用选项，因为默认情况下，readarray 会保留行末的换行符。
# -d
#   指定自定义的分隔符（默认为换行符）。
# -n 
#   指定要读取的最大行数。
# -s
#   跳过指定行数后开始读取。
# ------------------------------------------------------------------------

readarray -t lines < msg.txt

# 输出数组中的内容
for line in "${lines[@]}"; do
    echo "$line"
done

echo -e "\e[1;31m/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_分割线_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_\e[0m"

# ------------------------------------------------------------------------
# ⏹将find找到的文件名称放到数组中
# 1. -print0 和 xargs -0
#    将文件名以空字符（null 字符，\0）分隔，使 xargs 可以正确解析文件名中的任何字符
#    包括空格、换行符、单引号、双引号等。
# 2. 这种写法是获取文件名的最佳实践
# 3. readlink -f
#    用来显示文件的绝对路径
# ------------------------------------------------------------------------
readarray -t files < <(find ./ -name "*.sh" -print0 | xargs -0 readlink -f)
for file in "${files[@]}"; do
    echo "$file"
done